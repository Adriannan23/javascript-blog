{
  "version": 3,
  "sources": ["../node_modules/text-table/index.js", "../src/index.ts", "../src/stylish.ts", "../src/severity.ts"],
  "sourcesContent": ["module.exports = function (rows_, opts) {\n    if (!opts) opts = {};\n    var hsep = opts.hsep === undefined ? '  ' : opts.hsep;\n    var align = opts.align || [];\n    var stringLength = opts.stringLength\n        || function (s) { return String(s).length; }\n    ;\n    \n    var dotsizes = reduce(rows_, function (acc, row) {\n        forEach(row, function (c, ix) {\n            var n = dotindex(c);\n            if (!acc[ix] || n > acc[ix]) acc[ix] = n;\n        });\n        return acc;\n    }, []);\n    \n    var rows = map(rows_, function (row) {\n        return map(row, function (c_, ix) {\n            var c = String(c_);\n            if (align[ix] === '.') {\n                var index = dotindex(c);\n                var size = dotsizes[ix] + (/\\./.test(c) ? 1 : 2)\n                    - (stringLength(c) - index)\n                ;\n                return c + Array(size).join(' ');\n            }\n            else return c;\n        });\n    });\n    \n    var sizes = reduce(rows, function (acc, row) {\n        forEach(row, function (c, ix) {\n            var n = stringLength(c);\n            if (!acc[ix] || n > acc[ix]) acc[ix] = n;\n        });\n        return acc;\n    }, []);\n    \n    return map(rows, function (row) {\n        return map(row, function (c, ix) {\n            var n = (sizes[ix] - stringLength(c)) || 0;\n            var s = Array(Math.max(n + 1, 1)).join(' ');\n            if (align[ix] === 'r' || align[ix] === '.') {\n                return s + c;\n            }\n            if (align[ix] === 'c') {\n                return Array(Math.ceil(n / 2 + 1)).join(' ')\n                    + c + Array(Math.floor(n / 2 + 1)).join(' ')\n                ;\n            }\n            \n            return c + s;\n        }).join(hsep).replace(/\\s+$/, '');\n    }).join('\\n');\n};\n\nfunction dotindex (c) {\n    var m = /\\.[^.]*$/.exec(c);\n    return m ? m.index + 1 : c.length;\n}\n\nfunction reduce (xs, f, init) {\n    if (xs.reduce) return xs.reduce(f, init);\n    var i = 0;\n    var acc = arguments.length >= 3 ? init : xs[i++];\n    for (; i < xs.length; i++) {\n        f(acc, xs[i], i);\n    }\n    return acc;\n}\n\nfunction forEach (xs, f) {\n    if (xs.forEach) return xs.forEach(f);\n    for (var i = 0; i < xs.length; i++) {\n        f.call(xs, xs[i], i);\n    }\n}\n\nfunction map (xs, f) {\n    if (xs.map) return xs.map(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        res.push(f.call(xs, xs[i], i));\n    }\n    return res;\n}\n", "import stylish from \"./stylish\";\n\nexport { Severity } from \"./severity\";\n\nexport default stylish;\n", "import * as kleur from \"kleur/colors\";\nimport table, { type Options } from \"text-table\";\nimport { type Result } from \"./result\";\nimport { Severity } from \"./severity\";\n\n/**\n * Given a word and a count, append an s if count is not one.\n * @param word - A word in its singular form.\n * @param count - A number controlling whether word should be pluralized.\n * @returns - The original word with an s on the end if count is not one.\n */\nfunction pluralize(word: string, count: number): string {\n\treturn count === 1 ? word : `${word}s`;\n}\n\n/**\n * Given a line with \" $\\{line\\} $\\{column\\} \" where line is right-aligned and\n * column is left-aligned it replaces the delimiter with a colon.\n */\nfunction centerLineColumn(el: string): string {\n\treturn el.replace(/(\\d+)\\s+(\\d+)/u, (_m, p1: string, p2: string) => kleur.dim(`${p1}:${p2}`));\n}\n\n/**\n * Strip ANSI color escape sequences from text.\n */\nfunction stripAnsi(text: string): string {\n\t/* eslint-disable-next-line no-control-regex */\n\treturn text.replace(/\\u001B\\[[0-9;]*m/g, \"\");\n}\n\n/* eslint-disable-next-line sonarjs/cognitive-complexity */\nfunction stylish(results: Result[]): string {\n\tlet output = \"\\n\";\n\tlet errorCount = 0;\n\tlet warningCount = 0;\n\tlet fixableErrorCount = 0;\n\tlet fixableWarningCount = 0;\n\tlet summaryColor: kleur.Colorize = kleur.yellow;\n\n\tresults.forEach((result) => {\n\t\tconst messages = result.messages;\n\n\t\tif (messages.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\terrorCount += result.errorCount;\n\t\twarningCount += result.warningCount;\n\t\tfixableErrorCount += result.fixableErrorCount;\n\t\tfixableWarningCount += result.fixableWarningCount;\n\n\t\tconst rows = messages.map((message) => {\n\t\t\tlet messageType;\n\n\t\t\tif (message.fatal || message.severity === Severity.ERROR) {\n\t\t\t\tmessageType = kleur.red(\"error\");\n\t\t\t\tsummaryColor = kleur.red;\n\t\t\t} else {\n\t\t\t\tmessageType = kleur.yellow(\"warning\");\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\t\"\",\n\t\t\t\tmessage.line || 0,\n\t\t\t\tmessage.column || 0,\n\t\t\t\tmessageType,\n\t\t\t\tmessage.message.replace(/([^ ])\\.$/u, \"$1\"),\n\t\t\t\tmessage.ruleId ? kleur.dim(message.ruleId) : \"\",\n\t\t\t];\n\t\t});\n\n\t\tconst options: Options = {\n\t\t\talign: [\"l\", \"r\", \"l\"],\n\t\t\tstringLength(str: string): number {\n\t\t\t\treturn stripAnsi(str).length;\n\t\t\t},\n\t\t};\n\t\tconst formattedTable = table(rows, options).split(\"\\n\").map(centerLineColumn).join(\"\\n\");\n\n\t\toutput += `${kleur.underline(result.filePath)}\\n`;\n\t\toutput += `${formattedTable}\\n\\n`;\n\t});\n\n\tconst total = errorCount + warningCount;\n\n\tif (total > 0) {\n\t\toutput += summaryColor(\n\t\t\tkleur.bold(\n\t\t\t\t[\n\t\t\t\t\t\"\\u2716 \",\n\t\t\t\t\ttotal,\n\t\t\t\t\tpluralize(\" problem\", total),\n\t\t\t\t\t\" (\",\n\t\t\t\t\terrorCount,\n\t\t\t\t\tpluralize(\" error\", errorCount),\n\t\t\t\t\t\", \",\n\t\t\t\t\twarningCount,\n\t\t\t\t\tpluralize(\" warning\", warningCount),\n\t\t\t\t\t\")\\n\",\n\t\t\t\t].join(\"\")\n\t\t\t)\n\t\t);\n\n\t\tif (fixableErrorCount > 0 || fixableWarningCount > 0) {\n\t\t\toutput += summaryColor(\n\t\t\t\tkleur.bold(\n\t\t\t\t\t[\n\t\t\t\t\t\t\"  \",\n\t\t\t\t\t\tfixableErrorCount,\n\t\t\t\t\t\tpluralize(\" error\", fixableErrorCount),\n\t\t\t\t\t\t\" and \",\n\t\t\t\t\t\tfixableWarningCount,\n\t\t\t\t\t\tpluralize(\" warning\", fixableWarningCount),\n\t\t\t\t\t\t\" potentially fixable with the `--fix` option.\\n\",\n\t\t\t\t\t].join(\"\")\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t// Resets output color, for prevent change on top level\n\treturn total > 0 ? kleur.reset(output) : \"\";\n}\n\nexport default stylish;\n", "export enum Severity {\n\tOFF = 0,\n\tWARN = 1,\n\tERROR = 2,\n}\n"],
  "mappings": "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",
  "names": []
}
